version: '3.9'
x-common-variables: &common-variables
  ASPNETCORE_ENVIRONMENT: Development

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1
      - POSTGRES_DB=postgres
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgres/
    networks:
      - todo-app-network

  product-api:
    image: ${DOCKER_REGISTRY-}product-api
    container_name: product-api
    build:
      context: .
      dockerfile: src/Product/TodoApp.Product.API/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:5001
      - ApplicationName=product-api
      - ConnectionStrings__ProductDbContext=Host=postgres;Database=TodoAppProduct;Username=postgres;Password=1;Port=5432
    ports:
      - "5001:5001"
    restart: always
    networks:
      - todo-app-network
  product-api-dapr:
    image: "daprio/daprd:1.11.2"
    command: [ "./daprd",
               "-app-id", "product-api",
               "-app-port", "5001",
               "-placement-host-address", "placement:50006",
               "-config", "/components/daprConfig.yaml",
               "-resources-path", "/components",
               "-log-level","debug" ]
    volumes:
      - "./components-docker/:/components"
    depends_on:
      - product-api
    network_mode: "service:product-api"
  order-api:
    image: ${DOCKER_REGISTRY-}order-api
    container_name: order-api
    build:
      context: .
      dockerfile: src/Order/TodoApp.Order.API/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:5002
      - ApplicationName=order-api
      - ConnectionStrings__OrderDbContext=Host=postgres;Database=TodoAppOrder;Username=postgres;Password=1;Port=5432
    ports:
      - "5002:5002"
    restart: always
    networks:
      - todo-app-network
  order-api-dapr:
    image: "daprio/daprd:1.11.2"
    command: [ "./daprd",
               "-app-id", "order-api",
               "-app-port", "5002",
               "-placement-host-address", "placement:50006",
               "-config", "/components/daprConfig.yaml",
               "-resources-path", "/components",
               "-log-level","debug" ]
    volumes:
      - "./components-docker/:/components"
    depends_on:
      - order-api
    network_mode: "service:order-api"
    ############################
  # Dapr placement service
  ############################
  placement:
    image: "daprio/dapr:1.11.2"
    command: [ "./placement", "-port", "50006" ]
    ports:
      - "50006:50006"
    networks:
      - todo-app-network
  ############################
  # Zipkin component
  ############################
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - todo-app-network

  ############################
  # Redis state store
  ############################
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - todo-app-network
  # rabbitmq:
  #   container_name: rabbitmq
  #   image: rabbitmq:3.10.7-management
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=guest
  #     - RABBITMQ_DEFAULT_PASS=guest
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   volumes:
  #     - rabbitmq-data:/var/lib/rabbitmq/
  #   networks:
  #     - todo-app-network
volumes:
  postgres-data:
    external: false
  grafana-data:
    external: false
networks:
  todo-app-network:
    driver: bridge